<div id="clock-screensaver">
    <div class="clock-text">Режим ожидания</div>
    <div id="digital-clock">00:00:00</div>
    <canvas id="water-canvas"></canvas>
</div>

<style>
    #clock-screensaver {
        position: fixed;
        top: 0; left: 0;
        width: 100%; height: 100%;
        background: #000;
        z-index: 10000;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        color: #0ff;
        font-family: 'Arial', sans-serif;
        overflow: hidden;
    }
    .clock-text {
        font-size: 2rem;
        margin-bottom: 1rem;
        opacity: 0.8;
        z-index: 2;
    }
    #digital-clock {
        font-size: 7rem;
        font-weight: bold;
        text-shadow: 0 0 20px rgba(0, 255, 255, 0.7);
        z-index: 2;
    }
    #water-canvas {
        position: absolute;
        top: 0; left: 0;
        width: 100%; height: 100%;
        z-index: 1;
    }
</style>

<script>
    (function setupClock() {
        const clockElement = document.getElementById('digital-clock');
        function updateClock() {
            const now = new Date();
            const timeString = now.toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit', second: '2-digit'});
            clockElement.textContent = timeString;
        }
        updateClock();
        setInterval(updateClock, 1000);
    })();

    (function waterEffect() {
        const canvas = document.getElementById('water-canvas');
        const ctx = canvas.getContext('2d');
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        let time = 0;

        function draw() {
            time += 0.01;
            ctx.fillStyle = 'rgb(0, 0, 0)';
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            const cols = 20;
            const rows = 20;
            const cellWidth = canvas.width / cols;
            const cellHeight = canvas.height / rows;

            for (let x = 0; x < cols; x++) {
                for (let y = 0; y < rows; y++) {
                    const xPos = x * cellWidth;
                    const yPos = y * cellHeight;

                    // Создаём волну с помощью синуса
                    const offset = (Math.sin(x * 0.5 + time) + Math.cos(y * 0.5 + time)) * 10;
                    const size = 5 + offset;

                    ctx.fillStyle = `hsl(180, 100%, ${50 + offset}%)`;
                    ctx.beginPath();
                    ctx.arc(xPos + cellWidth/2, yPos + cellHeight/2, Math.abs(size), 0, Math.PI * 2);
                    ctx.fill();
                }
            }
            requestAnimationFrame(draw);
        }
        draw();
    })();
</script>
