<div id="fractal-screensaver">
    <div class="art-title">ГЕНЕРАТИВНЫЙ ЛАНДШАФТ</div>
    <canvas id="flame-canvas"></canvas>
</div>

<style>
    #fractal-screensaver {
        position: fixed;
        top: 0; left: 0;
        width: 100%; height: 100%;
        background: #000;
        z-index: 10000;
        display: flex;
        align-items: center;
        justify-content: center;
        font-family: monospace;
        color: #fff;
        overflow: hidden;
    }
    .art-title {
        position: absolute;
        bottom: 5%;
        z-index: 2;
        font-size: 1rem;
        opacity: 0.5;
        letter-spacing: 3px;
    }
    #flame-canvas {
        position: absolute;
        top: 0; left: 0;
        width: 100%; height: 100%;
    }
</style>

<script>
    (function fractalFlame() {
        const canvas = document.getElementById('flame-canvas');
        const ctx = canvas.getContext('2d');
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        const width = canvas.width;
        const height = canvas.height;
        let points = [];
        const numPoints = 3; // Количество вершин многоугольника
        const scale = 0.5;
        const hueStart = Math.random() * 360;

        // Создаём случайные начальные точки
        for (let i = 0; i < numPoints; i++) {
            let angle = (i / numPoints) * Math.PI * 2;
            points.push({
                x: width / 2 + Math.cos(angle) * width * scale,
                y: height / 2 + Math.sin(angle) * height * scale
            });
        }

        let x = Math.random() * width;
        let y = Math.random() * height;

        function draw() {
            // Рисуем полупрозрачный чёрный прямоугольник для создания эффекта шлейфа
            ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
            ctx.fillRect(0, 0, width, height);

            for (let i = 0; i < 100; i++) { // Рисуем по 100 точек за кадр для плавности
                // Выбираем случайную точку-цель
                const target = points[Math.floor(Math.random() * points.length)];
                // Двигаем текущую точку к цели
                x += (target.x - x) * scale;
                y += (target.y - y) * scale;

                // Рассчитываем цвет на основе позиции
                const hue = (hueStart + (x / width + y / height) * 180) % 360;
                ctx.fillStyle = `hsl(${hue}, 100%, 60%)`;

                // Рисуем точку
                ctx.beginPath();
                ctx.arc(x, y, 1, 0, Math.PI * 2);
                ctx.fill();
            }

            requestAnimationFrame(draw);
        }

        draw();

        // Меняем форму каждые 15 секунд
        setInterval(() => {
            points = [];
            for (let i = 0; i < numPoints; i++) {
                let angle = (i / numPoints) * Math.PI * 2;
                points.push({
                    x: width / 2 + Math.cos(angle) * width * scale * (0.7 + Math.random() * 0.6),
                    y: height / 2 + Math.sin(angle) * height * scale * (0.7 + Math.random() * 0.6)
                });
            }
        }, 15000);

    })();
</script>
